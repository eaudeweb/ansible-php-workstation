---
- name: Update base system
  ansible.builtin.apt:
    autoclean: yes
    autoremove: yes
    name: "*"
    state: latest

- name: Install base packages and utils
  ansible.builtin.apt:
    name: "{{ base_packages }}"
    state: "present"
    update_cache: true
    autoclean: true
    cache_valid_time: 5400

# TODO: Only when browser_packages
- name: Brave browser keyring
  ansible.builtin.apt_key:
    url: 'https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg'
    keyring: '/usr/share/keyrings/brave-browser-archive-keyring.gpg'

# TODO: Only when browser_packages
- name: Brave browser apt repo
  ansible.builtin.get_url:
    url: 'https://brave-browser-apt-release.s3.brave.com/brave-browser.sources'
    dest: '/etc/apt/sources.list.d/brave-browser-release.sources'

# TODO: Only when new repositories
- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true

# TODO: Only when browser_packages
- name: Install browser packages
  ansible.builtin.apt:
    name: "{{ browser_packages }}"
    state: "present"

- name: Install DBeaver CE
  ansible.builtin.apt:
    deb: "{{ dbeaver_ce_url }}"
    state: "present"

# update-alternatives --force --install /usr/bin/gzip gzip /usr/bin/pigz 10

- name: Copy /usr/bin/gzip to /usr/bin/gzip.original
  command: mv /usr/bin/gzip /usr/bin/gzip.original creates=/usr/bin/gzip.original

- name: Configure pigz as default gzip
  community.general.alternatives:
    name: gzip
    path: /usr/bin/pigz
    link: /usr/bin/gzip
    priority: 50
    state: selected

- name: Create user Work directory
  ansible.builtin.file:
    path: "/home/{{ linux_account }}/Work"
    state: directory
    mode: "0755"
    owner: "{{ linux_account }}"

- name: Install Discord
  ansible.builtin.apt:
    deb: "https://discord.com/api/download?platform=linux"
    state: "present"

- name: Install VSCode
  ansible.builtin.apt:
    deb: "https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64"
    state: "present"

- name: Load PHPStorm version information
  uri:
    url: "https://data.services.jetbrains.com/products/releases?code=PS&latest=true"
    return_content: yes
  register: php_versions

- name: Find latest PHPStorm version
  no_log: True
  set_fact:
    phpstorm_download_link: "{{ php_versions.json | json_query(linkquery) }}"
  vars:
    linkquery: "PS[0].downloads.linux.link"

- name: Create Applications directory
  ansible.builtin.file:
    path: "/home/{{ linux_account }}/Applications"
    state: directory
    mode: "0755"
    owner: "{{ linux_account }}"
  when: "phpstorm_download_link != ''"

- name: Download PHPStorm
  ansible.builtin.get_url:
      url: "{{ phpstorm_download_link }}"
      dest: "/home/{{ linux_account }}/Applications/PHPStorm.tar.gz"
  when: "phpstorm_download_link != ''"

- name: Unpack PHPStorm
  ansible.builtin.unarchive:
    src: "/home/{{ linux_account }}/Applications/PHPStorm.tar.gz"
    dest: "/home/{{ linux_account }}/Applications/"
    remote_src: Yes
    owner: "{{ linux_account }}"
    group: "{{ linux_account }}"
  when: "phpstorm_download_link != ''"

- name: Delete PHPStorm archive
  ansible.builtin.file:
    path: "/home/{{ linux_account }}/Applications/PHPStorm.tar.gz"
    state: "absent"
  when: "phpstorm_download_link != ''"
